<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yoon.mapper.MemberMapper">


  <resultMap type="org.yoon.domain.MemberVO" id="memberMap">
    <id property="userid" column="userid"/>
    <result property="userid" column="userid"/>
    <result property="userpw" column="userpw"/>
    <result property="username" column="username"/>
    <result property="regDate" column="regdate"/>
    <result property="updateDate" column="updatedate"/>
    <collection property="authList" resultMap="authMap">
    </collection> 
  </resultMap>
  
  <resultMap type="org.yoon.domain.AuthVO" id="authMap">
    <result property="userid" column="userid"/>
    <result property="auth" column="auth"/>
  </resultMap>
  
  <select id="read" resultMap="memberMap">
SELECT 
  mem.userid,  userpw, username, enabled, regdate, updatedate, auth
FROM 
  member mem LEFT OUTER JOIN member_auth auth on mem.userid = auth.userid 
WHERE mem.userid = #{userid} 
  </select>

<!-- 회원가입 -->	
	<insert id="insert">
		INSERT ALL
			INTO member(mno, userid, userpw, username) values(member_sequence.nextval, #{userid}, #{userpw}, #{username})
            INTO member_auth(userid, auth) values(#{userid}, 'ROLE_USER')
        SELECT * FROM DUAL       	
	</insert>
	
<!-- id중복체크 -->
<select id="idChk" parameterType="String" resultType="int">
	SELECT count(*)
	FROM member
	WHERE userid = #{userid}
</select>

<!-- 회원 정보 수정 -->
<update id="update">
update member set username = #{username} where userid= #{userid}
</update>
</mapper>